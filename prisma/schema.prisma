generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Property {
  id                  Int                   @id @default(autoincrement())
  sellerId            String
  title               String
  address             String?
  rent                Int?
  deposit             Int?
  bedrooms            Int?
  washRooms           Int?
  floorNum            Int?
  parking             Boolean?              @default(true)
  balcony             Int?
  mediaUrls           String[]
  listedAt            DateTime              @default(now())
  floorArea           Int?
  isActive            Boolean               @default(true)
  furnish             Furnish?
  furnishings         String[]
  messagesReceived    Int?                  @default(0)
  IntrestedProperties IntrestedProperties[]
  seller              Seller                @relation(fields: [sellerId], references: [id])
}

model Seller {
  id               String     @id @default(uuid())
  businessId       String?    @unique
  tags             String[]
  userId           String     @unique
  messagesReceived Message[]
  Property         Property[]
  user             User       @relation(fields: [userId], references: [id])
}

model User {
  id                  String                @id @unique @default(uuid())
  name                String
  phone               String?               @unique
  email               String                @unique
  createdAt           DateTime              @default(now())
  googleId            String                @unique
  picture             String?
  intrestedProperties IntrestedProperties[]
  sentMessages        Message[]
  Seller              Seller?
  socialLinks         SocialLink[]
}

model IntrestedProperties {
  userId     String
  propertyId Int
  Property   Property @relation(fields: [propertyId], references: [id])
  User       User     @relation(fields: [userId], references: [id])

  @@id([userId, propertyId])
}

model Message {
  id         String   @id @default(uuid())
  propertyId Int?
  userId     String?
  name       String?
  message    String?
  sellerId   String?
  sendAt     DateTime @default(now())
  phone      String?
  email      String?
  Seller     Seller?  @relation(fields: [sellerId], references: [id])
  User       User?    @relation(fields: [userId], references: [id])
}

model SocialLink {
  id     String @id @default(uuid())
  name   String
  url    String @unique
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Connect {
  id      String  @id @default(uuid())
  name    String?
  phone   String?
  email   String?
  message String?
}

enum Furnish {
  FULLY
  SEMI
  NONE
}
